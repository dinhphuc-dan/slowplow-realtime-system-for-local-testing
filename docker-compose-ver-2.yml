services:  
  kafka:
    image: bitnami/kafka:3.8.0
    container_name: kafka
    restart: unless-stopped
    networks:
      - snowplow-local-ver-2
    ports: 
    # expose for external clients, internal clients use kafka:9092 
      - 9094:9094
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    restart: always
    ports:
    - 15130:8080
    networks:
      - snowplow-local-ver-2
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
  
  snowplow-scala-stream-collector-kafka:
    image: snowplow/scala-stream-collector-kafka:3.1.0
    container_name: snowplow-scala-stream-collector-kafka
    restart: unless-stopped
    networks:
      - snowplow-local-ver-2
    depends_on:
      - kafka
    command: [ "--config", "/home/snowplow/snowplow-config/snowplow-stream-collector.hocon" ]
    ports:
      - 15100:8080
    volumes:
      - snowplow-local-config:/home/snowplow/snowplow-config
  
  snowplow-postgres:
    image: postgres:15 
    container_name: snowplow-postgres
    restart: unless-stopped
    networks:
      - snowplow-local-ver-2
    depends_on:
      - kafka
    ports:
      - 15110:5432
    volumes:
      - snowplow-postgres-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: snowplow_user
      POSTGRES_PASSWORD: snowplow_password
      POSTGRES_DB: igludb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U snowplow_user -d igludb"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  snowplow-iglu-server:
    image: snowplow/iglu-server:0.12.0
    container_name: snowplow-iglu-server
    restart: unless-stopped
    networks:
      - snowplow-local-ver-2
    depends_on:
      - snowplow-postgres
    command: [ "--config", "/home/snowplow/snowplow-config/iglu-server.hocon" ]
    # ports:
    #   - 15120:8080
    volumes:
      - snowplow-local-config:/home/snowplow/snowplow-config
  
  snowplow-enrich:
    image: snowplow/stream-enrich-kafka:3.8.0
    container_name: snowplow-enrich
    restart: unless-stopped
    networks:
      - snowplow-local-ver-2
    depends_on:
      - snowplow-scala-stream-collector-kafka
      - snowplow-iglu-server
    command: [
      "--config", "/home/snowplow/snowplow-config/snowplow-enrich.hocon",
      "--resolver", "file:/home/snowplow/snowplow-config/iglu-resolver.json",
      "--enrichments", "file:/home/snowplow/snowplow-config/enrichments"
    ]
    volumes:
      - snowplow-local-config:/home/snowplow/snowplow-config
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/home/snowplow/snowplow-config/snowplow-volio-group-ede057cb3572.json
    

volumes:
  snowplow-local-config:
    name: snowplow-local-config
    external: true
  snowplow-postgres-db:
    name: snowplow-postgres-db

networks:
  snowplow-local-ver-2:
    driver: bridge
